openapi: 3.1.0
info:
  version: ''
  title: Paymenter Client API
  summary: Paymenter
  description: |-
    Paymenter supports a way for users to connect via our api and build their own stuff on it.


    Please use the header `Accept`: `application/json` for the best results
  license:
    name: MIT
    identifier: MIT
paths:
  /api/clients/v1/tickets:
    get:
      tags:
        - Tickets
      summary: Get all tickets
      description: Get all tickets from the logged in user
      operationId: get-v1-tickets
      requestBody:
        content: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  message:
                    type: string
                    default: Ticket successfully retrieved.
                  data:
                    type: object
                    properties:
                      ticket:
                        $ref: '#/components/schemas/Ticket'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
              examples:
                Example 1:
                  value: {}
      security:
        - Authorization: []
    post:
      tags:
        - Tickets
      summary: Make new ticket
      description: Create a new ticket
      operationId: api-v1-clients-tickets-create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                message:
                  type: string
                priority:
                  type: string
                  description: 'Priority, must be one of: `low`, `medium`, `high`'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  message:
                    type: string
                    default: Ticket successfully created.
                  data:
                    type: object
                    properties:
                      ticket:
                        $ref: '#/components/schemas/Ticket'
      security:
        - Authorization: []
  '/api/clients/v1/tickets/{ticketId}':
    get:
      tags:
        - Tickets
      summary: Get ticket by id
      description: ''
      operationId: api-v1-clients-ticket-get
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
      security:
        - Authorization: []
  '/api/clients/v1/tickets/{ticketId}/reply':
    post:
      tags:
        - Tickets
      summary: Reply to ticket
      operationId: api-v1-clients-ticket-reply
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  message:
                    type: string
                    default: Message successfully sent.
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    readOnly: true
                    default: The message field is required.
                  errors:
                    type: object
                    properties:
                      message:
                        type: array
                        items:
                          type: string
                          default: The message field is required.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: false
                  message:
                    type: string
                    default: You are sending too many messages. Please wait a few minutes and try again.
      security:
        - Authorization: []
  '/api/clients/v1/tickets/{ticketId}/messages':
    get:
      tags:
        - Tickets
      summary: Get all messages from a ticket
      description: Get all messages from a ticket
      operationId: get-api-clients-v1-tickets-ticketId-messages
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TicketMessage'
      security:
        - Authorization: []
  '/api/clients/v1/tickets/{ticketId}/close':
    delete:
      tags:
        - Tickets
      summary: Delete ticket by id
      description: Close a ticket
      operationId: api-v1-clients-ticket-delete
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
      security:
        - Authorization: []
  /api/clients/v1/invoices:
    get:
      summary: Get all invoices
      operationId: get-api-clients-v1-invoices
      requestBody:
        content: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Invoice'
                  metadata:
                    type: object
                    properties:
                      total_items:
                        type: integer
                      total_pages:
                        type: integer
                      max_per_page:
                        type: integer
                      item_count:
                        type: integer
      security:
        - Authorization: []
  '/api/clients/v1/invoices/{invoiceId}':
    get:
      summary: Get all invoice by id
      operationId: get-api-clients-v1-invoices-get-invoices-by-id
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Invoice'
                  metadata:
                    type: object
                    properties:
                      total_items:
                        type: integer
                      total_pages:
                        type: integer
                      max_per_page:
                        type: integer
                      item_count:
                        type: integer
        '':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      invoice:
                        $ref: '#/components/schemas/Invoice'
      security:
        - Authorization: []
  '/api/clients/v1/invoices/{invoiceId}/pay':
    post:
      summary: Pay invoice by ID
      operationId: post-api-clients-v1-invoices-invoiceId-pay
      parameters:
        - name: invoiceId
          in: path
          description: invoice
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_method:
                  type: string
                  description: 'Payment method eg: PayPal, Stripe'
      responses:
        '302':
          description: Found
          headers:
            Location:
              schema:
                type: string
      security:
        - Authorization: []
components:
  securitySchemes:
    Authorization:
      type: apiKey
      name: Authorization Bearer
      in: header
  schemas:
    Ticket:
      type: object
      title: Ticket
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
        status:
          enum:
            - open
            - closed
            - replied
        priority:
          enum:
            - low
            - medium
            - high
        order_id:
          type:
            - integer
            - 'null'
        assigned_to:
          type:
            - integer
            - 'null'
        created_at:
          type: string
          readOnly: true
        updated_at:
          type: string
          readOnly: true
      examples:
        - id: 2
          title: New ticket
          status: open
          priority: high
          order_id: null
          assigned_to: null
          created_at: '2023-04-15T12:35:21.000000Z'
          updated_at: '2023-04-15T12:35:21.000000Z'
    TicketMessage:
      type: object
      title: TicketMessage
      properties:
        id:
          type: integer
          readOnly: true
        ticket_id:
          type: integer
          readOnly: true
        user_id:
          type: integer
          readOnly: true
        message:
          type: string
        created_at:
          type: string
          readOnly: true
        updated_at:
          type: string
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
    User:
      type: object
      title: User
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        email:
          type: string
        email_verified_at:
          type:
            - string
            - 'null'
          readOnly: true
        address:
          type:
            - string
            - 'null'
        city:
          type:
            - string
            - 'null'
        state:
          type:
            - string
            - 'null'
        zip:
          type:
            - string
            - 'null'
        country:
          type:
            - string
            - 'null'
        phone:
          type:
            - string
            - 'null'
        companyname:
          type:
            - string
            - 'null'
        created_at:
          type: string
          readOnly: true
        updated_at:
          type: string
          readOnly: true
    Invoice:
      type: object
      title: Invoice
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          type: integer
        order_id:
          type: integer
        status:
          type: string
        paid_at:
          type:
            - string
            - 'null'
          format: date
        due_date:
          type:
            - string
            - 'null'
          format: date
        created_at:
          type: string
          readOnly: true
        updated_at:
          type: string
          readOnly: true
security:
  - Authorization: []
